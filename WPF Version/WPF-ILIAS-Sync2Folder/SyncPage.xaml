<UserControl x:Class="WPF_ILIAS_Sync2Folder.SyncPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPF_ILIAS_Sync2Folder"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1011" Loaded="UserControl_Loaded">
    <Grid SizeChanged="SyncPage_SizeChanged">
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"/>
            <ColumnDefinition Width="210"/>
            <ColumnDefinition Width="210"/>
            <ColumnDefinition Width="195"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Button Name="btnSync" Width="200" Height="50" VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" Margin="10,25,10,0" Click="BtnSync_Click">
            <StackPanel Orientation="Horizontal" Name="stackSyncButton">
                <iconPacks:PackIconOcticons Kind="Sync" Name="iconSync" Width="20" Height="20" Spin="{Binding BtnSyncIconSpin}"/>
                <TextBlock Text="{Binding BtnSyncText}" Margin="10,0,0,0" TextAlignment="Center"/>
            </StackPanel>
        </Button>
        <CheckBox Name="checkShowOnly" Checked="CheckShowOnly_Checked" Unchecked="CheckShowOnly_Unchecked" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Margin="0,25,0,0">Show only (no file download)</CheckBox>
        <CheckBox Name="checkShowOnlyNew" Checked="CheckShowOnlyNew_Checked" Unchecked="CheckShowOnlyNew_Unchecked" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Margin="0,55,0,0">Only new files are shown</CheckBox>
        <CheckBox Name="checkOverwriteAll" Checked="CheckOverwriteAll_Checked"  Unchecked="CheckOverwriteAll_Unchecked"  Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Margin="0,25,0,0">Overwrite all updated files</CheckBox>
        <CheckBox Name="checkOverwriteNone" Checked="CheckOverwriteNone_Checked"  Unchecked="CheckOverwriteNone_Unchecked"  Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Margin="0,55,0,0">Ignore all file updates</CheckBox>
        <Label Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,7,0,0">Progress (this course):</Label>
        <Label Grid.Row="0" Grid.Column="3" Name="lbProgFile" Content="{Binding SyncLbProgFile}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,37,0,0"></Label>
        <Controls:MetroProgressBar Grid.Row="0" Grid.Column="3" Name="progBarFile" Value="{Binding SyncProgBarFileVal}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="120" Margin="45,40,0,0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Label Grid.Row="0" Grid.Column="4" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,7,0,0">Progress (total):</Label>
        <Label Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,67,0,0">New files count:</Label>
        <Label Grid.Row="0" Grid.Column="3" Name="lbNewFilesCount" Content="{Binding NewFilesCount}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="95,67,0,0"></Label>
        <Label Grid.Row="0" Grid.Column="4" Name="lbProgCourses" Content="{Binding SyncLbProgCourses}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,37,0,0"></Label>
        <Controls:MetroProgressBar Grid.Row="0" Grid.Column="4" Name="progBarCourses" Value="{Binding SyncProgBarCourseVal}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="120" Margin="45,40,0,0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

        <ListView x:Name="listViewSync" Grid.Row="1" Grid.ColumnSpan="5" Margin="10,10" ContextMenuOpening="ListViewSync_ContextMenuOpening" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
            <ListView.Resources>
                <ContextMenu x:Key="syncContextMenu">
                    <ContextMenu.DataContext>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}" Path="DataContext"/>
                    </ContextMenu.DataContext>
                    <MenuItem Name="syncContextOverwrite" Header="Overwrite local file" IsEnabled="{Binding SyncContextShowOverwrite}" Click="SyncContextOverwrite_Click"/>
                    <MenuItem Name="syncContextIgnore" Header="{Binding SyncContextIgnoreHeader}" Click="SyncContextIgnore_Click"/>
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="MinHeight" Value="25" />
                    <Setter Property="Margin" Value="0,0,0,0" />
                    <Setter Property="Border.BorderBrush" Value="{DynamicResource Gray3}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid>
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                        <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="BorderBrush" Value="#FF143c65" />
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource AccentColorBrush}"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Bd" Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource AccentColor3}" />
                                            </Setter.Value>
                                        </Setter>

                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="Selector.IsSelectionActive" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContextMenu" Value="{StaticResource syncContextMenu}"/>
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FileIsVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FileStatus}" Value="Path too long!">
                            <Setter Property="Background" Value="Firebrick"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FileStatus}" Value="Update available!">
                            <Setter Property="Background" Value="LightGray"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView x:Name="gridViewSync">
                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding FileStatus}"/>
                    <GridViewColumn Header="File Name" DisplayMemberBinding="{Binding FileName}"/>
                    <GridViewColumn Header="Path" DisplayMemberBinding="{Binding FilePath}"/>
                    <GridViewColumn Header="Date" DisplayMemberBinding="{Binding FileLastUpdate}"/>
                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding FileSize}"/>
                    <GridViewColumn Header="Ref ID" DisplayMemberBinding="{Binding FileId}"/>
                    <GridViewColumn Header="Updates ignored" DisplayMemberBinding="{Binding FileIgnore}"/>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
